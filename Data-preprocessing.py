# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1crAYbyajQ5vySf989dgoXQREwEeNJvl1
"""

#Import Modules
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from apyori import apriori

#Loading the dataset
df = pd.read_csv ("Groceries data.csv")
df.head()

#datatype information
df.info()

#Check availibility of null values
df.isnull().sum().sort_values(ascending = False)

#Type Conversion from Object to datatype
df['Date'] = pd.to_datetime(df['Date'])
df.info()

#Schema Check
df.head()

#Distribution of Items Sold
Item_distr = df.groupby(by = 'itemDescription').size().reset_index(name = 'Frequency').sort_values(by = 'Frequency', ascending = False).head(10)

bars = Item_distr["itemDescription"]
height = Item_distr["Frequency"]
x_pos = np.arange(len(bars))


plt.figure(figsize = (16,9))

plt.bar(x_pos, height, color = (0.2, 0.3, 0.5, 0.5))

plt.title("Top 10 sold item")
plt.xlabel("item names")
plt.ylabel('number of quantity sold')

plt.xticks(x_pos, bars)
plt.show()

#Index plotting
df_date = df.set_index(['Date'])
df_date

df_order = pd.read_csv('Groceries data.csv', parse_dates=['Date'])

df_order['Date'] = pd.to_datetime(df_order['Date'], errors='coerce')

df['Date'] = pd.to_datetime(df['Date'])  # Convert the date column to a DateTime data type
df.set_index('Date', inplace=True)  # Set the date column as the DataFrame's index

# Now you can use resample on the DateTimeIndex
df.resample("M")["itemDescription"].count().plot(figsize=(20, 8), grid=True, title='Number of Items Sold by Month')
plt.xlabel("Date")
plt.ylabel("Number of Items Sold")
plt.show()  # Show the plot

cust_level = df[["Member_number", "itemDescription"]].sort_values(by = ["Member_number"], ascending = False)
cust_level["itemDescription"] = cust_level["itemDescription"].str.strip()
cust_level

transactions = [a[1]['itemDescription'].tolist() for a in list(cust_level.groupby(["Member_number"]))]
rules = apriori(transactions = transactions, min_support = 0.002, min_Confidence = 0.05, min_lift = 3, min_length = 2)
results = list(rules)
# print(len(results))
# results[0]
results